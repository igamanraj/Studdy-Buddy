# Environment Variables Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# AUTHENTICATION (Clerk)
# Get these from: https://clerk.com/
# =============================================================================
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_your_clerk_publishable_key_here
CLERK_SECRET_KEY=sk_test_your_clerk_secret_key_here
CLERK_WEBHOOK_SECRET=whsec_your_clerk_webhook_secret_here

# =============================================================================
# DATABASE (PostgreSQL)
# Get this from: https://neon.tech/ (recommended) or any PostgreSQL provider
# =============================================================================
NEXT_PUBLIC_DATABASE_CONNECTION_STRING=postgresql://username:password@host:port/database?sslmode=require

# =============================================================================
# AI INTEGRATION (Google Gemini)
# Get these from: https://aistudio.google.com/
# Multiple API keys help with rate limiting - you can use the same key for all three
# =============================================================================
NEXT_PUBLIC_GEMINI_API_KEY=your_primary_gemini_api_key_here
2ndNEXT_PUBLIC_GEMINI_API_KEY=your_secondary_gemini_api_key_here
3rdNEXT_PUBLIC_GEMINI_API_KEY=your_tertiary_gemini_api_key_here

# =============================================================================
# PAYMENT PROCESSING (Stripe)
# Get these from: https://stripe.com/
# =============================================================================
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
NEXT_PUBLIC_STRIPE_PRICE_ID_MONTHLY=price_your_monthly_subscription_price_id_here

# =============================================================================
# YOUTUBE INTEGRATION
# Get this from: https://console.cloud.google.com/
# Enable YouTube Data API v3 and create credentials
# =============================================================================
YOUTUBE_API_KEY=your_youtube_api_key_here

# =============================================================================
# BACKGROUND JOBS (Inngest)
# Get this from: https://inngest.com/
# =============================================================================
INNGEST_SIGNING_KEY=signkey-your_inngest_signing_key_here

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
HOST_URL=http://localhost:3000/

# =============================================================================
# SETUP INSTRUCTIONS:
# =============================================================================
#
# 1. CLERK SETUP:
#    - Go to https://clerk.com/ and create an account
#    - Create a new application
#    - Copy the publishable key and secret key from the dashboard
#    - (Optional) Set up webhooks for user events
#
# 2. DATABASE SETUP:
#    - Go to https://neon.tech/ and create a free PostgreSQL database
#    - Copy the connection string from the dashboard
#    - Make sure to include ?sslmode=require at the end
#
# 3. GOOGLE GEMINI AI SETUP:
#    - Go to https://aistudio.google.com/
#    - Create a new API key
#    - You can use the same key for all three variables or create separate keys
#    - Multiple keys help with rate limiting when generating multiple courses
#
# 4. STRIPE SETUP:
#    - Create an account at https://stripe.com/
#    - Get your secret key from the developers section
#    - Create a product and monthly price in your Stripe dashboard
#    - Copy the price ID for the monthly subscription
#
# 5. YOUTUBE API SETUP:
#    - Go to https://console.cloud.google.com/
#    - Create a new project or select existing one
#    - Enable YouTube Data API v3
#    - Create credentials (API key)
#    - Copy the API key
#
# 6. INNGEST SETUP:
#    - Go to https://inngest.com/ and create an account
#    - Create a new app
#    - Copy the signing key from the settings
#
# 7. AFTER SETUP:
#    - Run: npx drizzle-kit push (to set up database tables)
#    - Run: npm run dev (to start the development server)
#    - Run: npx inngest-cli@latest dev (in a separate terminal for background jobs)
#
# =============================================================================
